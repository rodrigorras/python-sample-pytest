name: Build pipeline

trigger:
- main


jobs:
- job: 
  displayName: "CI Pipeline"
  pool:
    vmImage: 'ubuntu-latest'

  
  variables:
    HELM_EXPERIMENTAL_OCI: 1
    registryName: '40.76.167.146'
    BuildId: '$(Build.BuildId)'
    tag: '$(Build.BuildId)'
    reponame: '$(Build.Repository.Name)'


  steps:

  - task: Bash@3
    name: 'Docker_login_Harbor'
    inputs:
      targetType: 'inline'
      script: |
        # Write your commands here
        cat /etc/docker/daemon.json
        echo '{ "exec-opts": ["native.cgroupdriver=cgroupfs"], "insecure-registries": ["0.0.0.0/0"] }' | sudo tee /etc/docker/daemon.json
        echo "restart docker..."
        cat /etc/docker/daemon.json
        sudo systemctl daemon-reload
        sudo systemctl restart docker
        docker login 40.76.167.146:80 -u admin -p  $(harbor-passwd)

  - script: |
      full_name=$(reponame)
      IFS='/' read -ra parts <<< "$full_name"
      second_half=${parts[1]}
      echo "##vso[task.setvariable variable=second_half]$second_half"
    displayName: 'Set Second Half as Environment Variable'

  - task: Bash@3
    name: 'Docker_build' 
    inputs:
      targetType: 'inline'
      script: |
        # Write your commands here
        docker build -t $(registryName)/nqcc/$(second_half):$(BuildID) .
        docker images  
        echo 'Build Success!'
      #workingDirectory: '$(Build.SourcesDirectory)/AppA.WebApi'
    displayName: 'Build docker Image in the Worker'

  - task: Bash@3
    name: 'Docker_push' 
    inputs:
      targetType: 'inline'
      script: |
        # Write your commands here
        docker push  $(registryName)/nqcc/$(second_half):$(BuildID) 
        docker images  
        echo 'Build Success!'
    displayName: 'Update Docker Image in the remote Registry'


- job: 
  displayName: "CI Pipeline"
  pool:
    vmImage: 'ubuntu-latest'
      

  steps:

    - task: Bash@3
      displayName: 'Update Helm Chart '
      inputs:
        targetType: 'inline'
        script: |
            apt-get update -y && apt-get install openssh-client git -y 
            mkdir -p Ëœ/.ssh
            echo "$SSH_PRIVATE_KEY" > /root/.ssh/id_rsa
            chmod 600 /root/.ssh/id_rsa
            ssh-keyscan -H gitlab.com >> ~/.ssh/known_hosts
            chmod 644 ~/.ssh/known_hosts
            eval $(ssh-agent -s)
            echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -  
            git config --global user.email "gitlab-ci@gmail.com"
            git config --global user.name "gitlab-ci"
            git clone git@gitlab.com:container-solutions/nqcc-helmcharts.git
            cd manifest-repo
            ls -latr
    - task: Bash@3
      displayName: 'Update Helm Chart '
      inputs:
          targetType: 'inline'
          script: |
              # Update Image TAG
              - sed -i "s/login_demo:.*/login_demo:${CI_COMMIT_SHORT_SHA}/g" test-login-app/values.yaml
              - git add test-login-app/values.yaml
              - git commit -am "Update Image"
              - git push





      